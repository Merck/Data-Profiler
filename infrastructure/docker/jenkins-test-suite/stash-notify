#! /usr/bin/env python3

# Only standard lib imports are allowed
import sys
import urllib.request
import json
import os
import argparse
from base64 import b64encode

def file_get_contents(filename):
    with open(filename) as f:
        return f.read().strip()

def post_to_stash():
    parser = argparse.ArgumentParser(description='Stash Notify')
    parser.add_argument('--status', required=True, type=str, choices=['INPROGRESS','SUCCESSFUL','FAILED'])
    parser.add_argument('--number', required=True, type=int, default=1)
    try:
        args = parser.parse_args()
    except SystemExit:
        print("Incorrect Args passed")
        sys.exit(0)

    revision = file_get_contents('.dataprofiler-revision')

    enc_creds = b64encode("{}:{}".format('srvdataprofilerstash',file_get_contents('.srvdataprofilerstash')).encode('ascii')).decode('ascii')

    # Add URL to stash
    url = "{}".format(revision)
    # Add URL to jenkins servier
    build_url = "{}/".format(args.number)

    req = urllib.request.Request(url)
    req.add_header('Content-Type', 'application/json; charset=utf-8')
    req.add_header('Authorization', 'Basic {}'.format(enc_creds))

    payload = json.dumps({
        'state': args.status,
        'key': revision,
        'name': revision,
        'url': build_url,
        'description': build_url
    }).encode('utf-8')
    req.add_header('Content-Length', len(payload))
    urllib.request.urlopen(req, payload)
    return True


if __name__ == '__main__':
    post_to_stash()
