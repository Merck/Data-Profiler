#
# Copyright 2021 Merck & Co., Inc. Kenilworth, NJ, USA.
#
#	Licensed to the Apache Software Foundation (ASF) under one
#	or more contributor license agreements. See the NOTICE file
#	distributed with this work for additional information
#	regarding copyright ownership. The ASF licenses this file
#	to you under the Apache License, Version 2.0 (the
#	"License"); you may not use this file except in compliance
#	with the License. You may obtain a copy of the License at
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
#
#	Unless required by applicable law or agreed to in writing,
#	software distributed under the License is distributed on an
#	"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#	KIND, either express or implied. See the License for the
#	specific language governing permissions and limitations
#	under the License.
#
---
- name: ensure keys directory exists
  file:
    path: "{{ bind_dnssec_key_dir }}"
    state: directory
    owner: "{{ bind_owner }}"
    group: "{{ bind_group }}"
    mode: '0750'
  when: "{{ dnssec_enabled }}" == 'yes'
  tags:
    - bind
    - dnssec_keygen

- name: DNSSEC keygen | Create key file for each zone (This may take a long time)
  shell: >
    dnssec-keygen -a HMAC-MD5 -b 512 -n HOST "{{ item.name }}"
  args:
    chdir: "{{ bind_dnssec_key_dir }}"
    creates:
      - "K{{ item.name }}.+[0-9][0-9][0-9].+[0-9][0-9][0-9][0-9][0-9].key"
      - "K{{ item.name }}.+[0-9][0-9][0-9].+[0-9][0-9][0-9][0-9][0-9].private"
  when: "{{ dnssec_enabled }}" == 'yes'
  tags:
    - bind
    - dnssec_keygen

- name: DNSSEC keygen | Ensure proper permissions on DNSSEC keys
  file:
    path: "{{ item }}"
    mode: '0640'
    owner: "{{ bind_owner }}"
    group: "{{ bind_group }}"
  with_fileglob:
    - "{{ bind_dnssec_key_dir }}/K*.{key,private}"
  when: "{{ dnssec_enabled }}" == 'yes'
  tags:
    - bind
    - dnssec_keygen

- name: DNSSEC keygen | Gather keys from key files
  shell: >
    set -o nounset -o pipefail -o errexit &&
    grep 'Key:' "{{ bind_dnssec_key_dir }}/K{{ bind_forward_zone }}".*.private | cut -d ' ' -f 2
  args:
    executable: /bin/bash
  register:
    bind_dnssec_keys
  when: "{{ dnssec_enabled }}" == 'yes'
  tags:
    - bind
    - dnssec_keygen

- name: DNSSEC keygen | Show keys (debug)
  debug:
    var: bind_dnssec_keys
  when: "{{ dnssec_enabled }}" == 'yes'
  tags:
    - bind
    - dnssec_keygen

...