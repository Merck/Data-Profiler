#
# Copyright 2021 Merck & Co., Inc. Kenilworth, NJ, USA.
#
#	Licensed to the Apache Software Foundation (ASF) under one
#	or more contributor license agreements. See the NOTICE file
#	distributed with this work for additional information
#	regarding copyright ownership. The ASF licenses this file
#	to you under the Apache License, Version 2.0 (the
#	"License"); you may not use this file except in compliance
#	with the License. You may obtain a copy of the License at
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
#
#	Unless required by applicable law or agreed to in writing,
#	software distributed under the License is distributed on an
#	"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#	KIND, either express or implied. See the License for the
#	specific language governing permissions and limitations
#	under the License.
#
- name: "Create private key for user spark on master"
  user:
    name: "{{ spark_user }}"
    group: "{{ spark_group }}"
    generate_ssh_key: yes
  delegate_to: "{{ hostvars[groups['spark_masters'][0]].private_ip_address }}"
  become: true

- name: "Fetch public key for user spark"
  fetch:
    src: "~{{ spark_user }}/.ssh/id_rsa.pub"
    dest: "/tmp/{{ spark_user }}/id_rsa.pub"
    flat: yes
  delegate_to: "{{ hostvars[groups['spark_masters'][0]].private_ip_address }}"
  register: remote_pubkey
  become: true

- name: "Set authorized keys for user spark on all nodes"
  authorized_key:
    user: "{{ spark_user }}"
    key: "{{ lookup('file', remote_pubkey.dest) }}"
  become: true

- name: "Remove local copies of pub key for user spark"
  local_action:
    module: file
    dest: "/tmp/{{ spark_user }}"
    state: absent
