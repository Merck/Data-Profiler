#
# Copyright 2021 Merck & Co., Inc. Kenilworth, NJ, USA.
#
#	Licensed to the Apache Software Foundation (ASF) under one
#	or more contributor license agreements. See the NOTICE file
#	distributed with this work for additional information
#	regarding copyright ownership. The ASF licenses this file
#	to you under the Apache License, Version 2.0 (the
#	"License"); you may not use this file except in compliance
#	with the License. You may obtain a copy of the License at
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
#
#	Unless required by applicable law or agreed to in writing,
#	software distributed under the License is distributed on an
#	"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#	KIND, either express or implied. See the License for the
#	specific language governing permissions and limitations
#	under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ .Values.podName }}
    namespace: {{ .Release.Namespace | quote }}
    labels:
        app: {{ .Values.podName }}
spec:
    strategy:
      type: Recreate # required if we use pvc attachments. breaks 0 downtime.
    replicas: {{ .Values.replicas }}
    selector:
      matchLabels:
        app: {{ .Values.podName }}
    template:
        metadata:
          namespace: {{ .Release.Namespace | quote }}
          labels:
            app: {{ .Values.podName }}
        spec:
          containers:
          - name: rou-api 
            image: {{ .Values.image.name | quote }}
            ports:
            - containerPort: {{ .Values.service.api.port }}
            resources:
              requests:
                memory: {{ .Values.resources.requests.memory | quote }}
                cpu: {{ .Values.resources.requests.cpu | quote }}
              limits:
                memory: {{ .Values.resources.limits.memory | quote }}
                cpu: {{ .Values.resources.limits.cpu | quote }}
            env:
            - name: DATABASE_NUM_POOL_CONNS
              value: {{ .Values.api.env.DATABASE_NUM_POOL_CONNS | quote }}
            - name: DATABASE_POOL_IDLE_MILLI
              value: {{ .Values.api.env.DATABASE_POOL_IDLE_MILLI | quote }}
            - name: DATABASE_POOL_EVICT_MILLI
              value: {{ .Values.api.env.DATABASE_POOL_EVICT_MILLI | quote }}
            - name: NODE_ENV
              value: {{ .Values.api.env.NODE_ENV  | quote }}
            envFrom:
              - configMapRef:
                  name: web-{{ .Release.Namespace }}-env-file
            command: ["/opt/app/docker-entrypoint.sh"]
            args: ["yarn", "run", "start"]
          - name: rou-db
            image: postgres:10
            resources:
              requests:
                memory: {{ .Values.resources.requests.memory | quote }}
                cpu: {{ .Values.resources.requests.cpu | quote }}
              limits:
                memory: {{ .Values.resources.limits.memory | quote }}
                cpu: {{ .Values.resources.limits.cpu | quote }}
            env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: web-{{ .Release.Namespace }}-env-file
                  key: ROU_DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: web-{{ .Release.Namespace }}-env-file
                  key: ROU_DB_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: web-{{ .Release.Namespace }}-env-file
                  key: ROU_DB_DATABASE
            - name: PGDATA
              value: {{ .Values.db.env.PGDATA | quote }}
            volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: rou-db-vol
          imagePullSecrets:
          - name: {{ .Values.imagePullSecrets | quote }}
          restartPolicy: "Always"
          volumes:
          - name: rou-db-vol
            persistentVolumeClaim:
              claimName: {{ .Release.Namespace }}-rou-pvc
